<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SNR | Iván Rodríguez]]></title>
  <link href="http://viktorivan.github.io/blog/categories/snr/atom.xml" rel="self"/>
  <link href="http://viktorivan.github.io/"/>
  <updated>2014-11-22T11:41:02-08:00</updated>
  <id>http://viktorivan.github.io/</id>
  <author>
    <name><![CDATA[Iván Rodríguez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cálculo de SNR ciego para OFDM]]></title>
    <link href="http://viktorivan.github.io/blog/2014/11/12/calculo-snr-ciego-para-ofdm/"/>
    <updated>2014-11-12T17:10:05-08:00</updated>
    <id>http://viktorivan.github.io/blog/2014/11/12/calculo-snr-ciego-para-ofdm</id>
    <content type="html"><![CDATA[<p><em>Resumen.</em></p>

<p>La relación señal a ruido (SNR) es la proporción existente entre la potencia de la señal recibida y la potencia de ruido en el receptor. De este modo, se realiza la medición de la tasa de bit erróneo (BER) de un sistema de comunicación digital ante la presencia de ruido y sin tener en cuenta el ancho de banda. Para el cálculo de SNR normalmente involucra el conocimiento previo en el receptor de la palabra transmitida y el canal. Por lo general se expresa en dB y es adimensional. </p>

<p>En un sistema convencional de Multiplexión por División de Frecuencias Ortogonales (OFDM), el cálculo de SNR se realiza utilizando símbolos de entrenamiento o subportadoras pilotos. Uno de los métodos para el cálculo de SNR involucra que la secuencia transmitida es conocida previamente por el receptor. Cuando el receptor no conoce esta secuencia de entrenamiento, el método de estimación es conocido como estimación ciega.</p>

<!-- more -->
<p><em>I. Introducción.</em></p>

<p>La estimación del SNR para un sistema de comunicación es importante, ya que con ello se valida el desempeño de un sistema para ciertas condiciones de canal. De este modo se puede interpretar que un sistema es eficiente a altas SNR o un deficiente a bajos SNR. Así mismo se puede utlizar para comparar el sistema con otros esquemas, dando a entender que tiene un mejor BER, tasa de símbolo erróneo (SER) o tasa de paquete erróneo (PER) que otros sistemas.</p>

<p>De acuerdo con la literatura, la estimación de SNR en el contexto de portadora única es un tema muy investigado, y muchos de estas técnicas se han adaptado a la modulación OFDM en forma directa. De acuerdo a algunos autores, es posible realizar la estimación ciega de SNR en un símbolo OFDM directamente en la carga util, sin necesidad de conocer los pilotos, cabecera o secuencias de entrenamiento<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. </p>

<p>A continuación se mostrará una técnica de estimación de SNR ciego, así mismo se propondrá un algoritmo donde se muestra los valores de estimación y reales de SNR de un sistema OFDM.</p>

<p><em>II. Modelo de sistema.</em></p>

<p>En el dominio de la frecuencia, el símbolo OFDM recibido $Y(j,k)$ en el tiempo $j$ y subportadora $k$ puede ser representado por:</p>

<p>$
\begin{equation}
Y(j,k)=X(j,k)H(j,k)+N(j,k),
\end{equation}
$ </p>

<p>donde $X(j,k)$ es el símbolo transmitido, $H(j,k)$ es el canal y $N(j,k)$ es el ruido. El SRN instantáneo $\Psi$ en el intervalo de tiempo $J$ en el grupo de subportadoras $K$ está definido por la variable aleatoria</p>

<p>$
\begin{equation}
\Psi = \dfrac{\sum_J\sum_K{\left| X(j,k)H(j,k) \right|^2}}{\sum_J\sum_K{\left| N(j,k) \right|^2}}
\end{equation}
$ </p>

<p>donde $N(j,k)$ se puede calcular por medio de la siguiente ecuación:</p>

<p>$
\begin{equation}
{\sum_J\sum_K{\left| N(j,k) \right|^2}}= {\sum_J\sum_K{\left| Y(j,k)-X(j,k)H(j,k) \right|^2}}
\end{equation}
$</p>

<p>Considerando que prácticamente todos los sistemas OFDM definen un conjunto de subportadoras $Q$ donde no se transmite señal alguna, por lo general al principio y final del símbolo, es posible suponer que los valores presentes en $Q$ después de la equalización de la carga util sea ruido.</p>

<p>$
\begin{equation}
Y(j,q)= N(j,q)
\end{equation}
$  </p>

<p>Asumiendo que </p>

<p>$
\begin{equation}
\sum_J\sum_Q{\left| N(j,q) \right|^2} &gt; 0
\end{equation}
$ </p>

<p>se puede definir la relación ruido a ruido (NNR) $\eta$ como sigue:</p>

<p>$
\begin{equation}
{\sum_J\sum_Q{\left| N(j,q) \right|^2}}= {\sum_J\sum_K{\left| N(j,k)\right|^2}}
\end{equation}
$</p>

<p>Si el ruido es blanco aditivo gausiano (AWGN), el cálculo de $\eta$ puede realizarse como:</p>

<p>$
\begin{equation}
\eta = Q / K
\end{equation}
$</p>

<p>De este modo, la estimación del SNR $\Psi$ se define por:</p>

<p>$
\begin{equation}
\Psi = \dfrac{\sum_J\sum_K{\left| Y(j,k) \right|^2}}{\sum_J\sum_Q{\left| Y(j,q) \right|^2}} \eta -1
\end{equation}
$ </p>

<p><em>II. Algoritmo de estimación de SNR ciego.</em></p>

<p>A continuación se muestra una simulación de un sistema DFTS-OFDM desarrollado en Python. El tamaño del símbolo es de 2048 subportadoras, de las cuales sólo 192 tienen datos y el resto son nulos. La estimación de SNR se realiza en el dominio de la frecuencia, por lo que al algoritmo se agrega después de la etapa de OFDM pero antes de DFTS. Así mismo en la gráfica se puede observar el valor de SNR estimado junto con el valor de SNR real. </p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (DFTSOFDMSNR.py)</span> <a href='/downloads/code/DFTSOFDMSNR.py'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#Programa DFTS-OFDM</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Para ejecutar se requiere de scipy y matplotlib</span>
</span><span class='line'><span class="c">#Desde una terminal ejecute: </span>
</span><span class='line'><span class="c"># sudo apt-get install python-numpy python-scipy python-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose python-tk</span>
</span><span class='line'><span class="c">#La simulacion la puede correr desde una terminal</span>
</span><span class='line'><span class="c"># python DFTSOFDM.py</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Carga de bibliotecas</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">scipy</span> <span class="kn">as</span> <span class="nn">sp</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="kn">as</span> <span class="nn">plt</span>
</span><span class='line'>
</span><span class='line'><span class="n">np</span><span class="o">.</span><span class="n">set_printoptions</span><span class="p">(</span><span class="n">precision</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="n">suppress</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">threshold</span><span class="o">=</span><span class="s">&#39;nan&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Datos de inicializacion</span>
</span><span class='line'><span class="c">#print &quot;Inicializando parametros de simulacion&quot;</span>
</span><span class='line'><span class="n">ebno</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">taps</span> <span class="o">=</span> <span class="mf">1.</span>
</span><span class='line'><span class="n">paqsnr</span> <span class="o">=</span> <span class="mf">1000.</span>
</span><span class='line'><span class="n">paq</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">ebno</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">paqsnr</span>
</span><span class='line'><span class="n">datasize</span> <span class="o">=</span> <span class="mi">768</span>
</span><span class='line'><span class="n">gx</span> <span class="o">=</span> <span class="s">&quot;04C11DB7&quot;</span>
</span><span class='line'><span class="n">polsize</span> <span class="o">=</span> <span class="mi">32</span>
</span><span class='line'><span class="n">dfts</span> <span class="o">=</span> <span class="mi">192</span>
</span><span class='line'><span class="n">ofdm</span> <span class="o">=</span> <span class="mi">2048</span>
</span><span class='line'><span class="n">cp</span> <span class="o">=</span> <span class="n">ofdm</span><span class="o">/</span><span class="mi">4</span>
</span><span class='line'><span class="n">pilot</span> <span class="o">=</span> <span class="mi">4</span>
</span><span class='line'><span class="n">pilot_carriers</span> <span class="o">=</span> <span class="p">[</span><span class="o">-</span><span class="mi">61</span><span class="p">,</span><span class="o">-</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">61</span><span class="p">]</span>
</span><span class='line'><span class="n">dfts_carriers</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="p">((</span><span class="n">dfts</span><span class="o">+</span><span class="n">pilot</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,(</span><span class="n">dfts</span><span class="o">+</span><span class="n">pilot</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span> <span class="k">if</span> <span class="n">x</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">pilot_carriers</span><span class="p">]</span>
</span><span class='line'><span class="n">zero_carriers</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="p">(</span><span class="nb">range</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1950</span><span class="p">))</span> <span class="k">if</span> <span class="n">x</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">99</span><span class="p">)])</span>
</span><span class='line'>
</span><span class='line'><span class="c">### TRANSMISOR ###</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Generacion de datos aleatorios</span>
</span><span class='line'><span class="c">#print &quot;Generando bits de datos aleatorios&quot;</span>
</span><span class='line'><span class="n">datab</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="n">datasize</span><span class="o">-</span><span class="n">polsize</span><span class="p">)</span><span class="o">*</span><span class="n">paq</span><span class="p">)</span>
</span><span class='line'><span class="n">datab</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">datab</span><span class="p">,(</span><span class="n">paq</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Etapa CRC</span>
</span><span class='line'><span class="c">#print &quot;Calculando CRC&quot;</span>
</span><span class='line'><span class="n">pol</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">bin</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">gx</span><span class="p">),</span> <span class="mi">16</span><span class="p">))[</span><span class="mi">2</span><span class="p">:]</span><span class="o">.</span><span class="n">zfill</span><span class="p">(</span><span class="n">polsize</span><span class="p">)</span><span class="o">.</span><span class="n">rjust</span><span class="p">(</span><span class="n">polsize</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="s">&#39;1&#39;</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">x</span><span class="p">])</span>
</span><span class='line'><span class="n">datazeros</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">concatenate</span><span class="p">((</span><span class="n">datab</span><span class="p">,</span><span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">paq</span><span class="p">,</span><span class="n">polsize</span><span class="p">),</span><span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">int</span><span class="p">)),</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">datacrc</span> <span class="o">=</span> <span class="n">datazeros</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Calculo CRC</span>
</span><span class='line'><span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datazeros</span><span class="p">)[</span><span class="mi">0</span><span class="p">]):</span>
</span><span class='line'>	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datazeros</span><span class="p">)[</span><span class="mi">1</span><span class="p">]):</span>
</span><span class='line'>		<span class="k">if</span> <span class="n">datazeros</span><span class="p">[</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span> <span class="ow">and</span> <span class="n">i</span><span class="o">+</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">pol</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span> <span class="o">&lt;</span> <span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datazeros</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span>
</span><span class='line'>			<span class="n">datazeros</span><span class="p">[</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">pol</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">datazeros</span><span class="p">[</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">pol</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">i</span><span class="p">]</span><span class="o">^</span><span class="n">pol</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Datos con CRC</span>
</span><span class='line'><span class="n">datacrc</span> <span class="o">=</span> <span class="n">datacrc</span><span class="o">|</span><span class="n">datazeros</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Modulador 16-QAM</span>
</span><span class='line'><span class="c">#print &quot;Datos en el modulador digital&quot;</span>
</span><span class='line'><span class="n">dataqam</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">datacrc</span><span class="p">,(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span><span class='line'><span class="n">dataqam</span> <span class="p">[:,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">dataqam</span> <span class="p">[:,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]]</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">dataqam</span> <span class="p">[:,[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]]</span> <span class="o">=</span> <span class="o">-</span><span class="p">(</span><span class="n">dataqam</span> <span class="p">[:,[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]]</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="n">datam</span> <span class="o">=</span> <span class="p">(</span><span class="n">dataqam</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">dataqam</span><span class="p">[:,</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="n">dataqam</span><span class="p">[:,</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="n">dataqam</span><span class="p">[:,</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="mi">1j</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#DFTS</span>
</span><span class='line'><span class="c">#print &quot;Aplicando DFTS&quot;</span>
</span><span class='line'><span class="n">datadfts</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">datam</span><span class="p">,(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">dfts</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datadfts</span><span class="p">)[</span><span class="mi">0</span><span class="p">]):</span>
</span><span class='line'>	<span class="n">datadfts</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datadfts</span><span class="p">)[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">fft</span><span class="o">.</span><span class="n">fft</span><span class="p">(</span><span class="n">datadfts</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datadfts</span><span class="p">)[</span><span class="mi">1</span><span class="p">]])</span>
</span><span class='line'>	
</span><span class='line'><span class="c">#OFDM</span>
</span><span class='line'><span class="c">#print &quot;En el transmisor OFDM&quot;</span>
</span><span class='line'><span class="c">#Generacion de ceros y pilotos</span>
</span><span class='line'><span class="n">datapilot</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="n">size</span><span class="o">=</span><span class="n">paq</span><span class="o">*</span><span class="n">pilot</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">,(</span><span class="n">paq</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'><span class="n">dataofdm</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">paq</span><span class="p">,</span><span class="n">ofdm</span><span class="p">),</span><span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">complex</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Asignacion de portadoras</span>
</span><span class='line'><span class="n">dataofdm</span><span class="p">[:,</span><span class="n">pilot_carriers</span><span class="p">]</span> <span class="o">=</span> <span class="n">datapilot</span>
</span><span class='line'><span class="n">dataofdm</span><span class="p">[:,</span><span class="n">dfts_carriers</span><span class="p">]</span> <span class="o">=</span> <span class="n">datadfts</span>
</span><span class='line'>
</span><span class='line'><span class="c">#IFFT</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">)[</span><span class="mi">0</span><span class="p">]):</span>
</span><span class='line'>	<span class="n">dataofdm</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">)[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">fft</span><span class="o">.</span><span class="n">ifft</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">)[</span><span class="mi">1</span><span class="p">]])</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Prefijo ciclico</span>
</span><span class='line'><span class="n">dataofdm</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">concatenate</span><span class="p">((</span><span class="n">dataofdm</span><span class="p">[:,</span><span class="n">ofdm</span><span class="o">-</span><span class="n">cp</span><span class="p">:</span><span class="n">ofdm</span><span class="p">],</span><span class="n">dataofdm</span><span class="p">),</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">### CANAL ###</span>
</span><span class='line'><span class="c">#Multitrayectoria</span>
</span><span class='line'><span class="c">#print &quot;Agregando multitrayectorias del canal&quot;</span>
</span><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="mi">1</span><span class="o">/</span><span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">taps</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="n">taps</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="n">taps</span><span class="p">)</span><span class="o">*</span><span class="mi">1j</span><span class="p">)</span>
</span><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">((</span><span class="n">np</span><span class="o">.</span><span class="n">tile</span><span class="p">(</span><span class="mf">1.</span><span class="o">/</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">taps</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">)[</span><span class="mi">0</span><span class="p">])),(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">taps</span><span class="p">))</span><span class="o">*</span><span class="n">h</span>
</span><span class='line'><span class="n">H</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">paq</span><span class="p">,</span><span class="n">ofdm</span><span class="o">+</span><span class="n">cp</span><span class="p">),</span><span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">complex</span><span class="p">)</span>
</span><span class='line'><span class="n">datacanal</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">paq</span><span class="p">,</span><span class="n">ofdm</span><span class="o">+</span><span class="n">cp</span><span class="p">),</span><span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">complex</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">)[</span><span class="mi">0</span><span class="p">]):</span>
</span><span class='line'>	<span class="n">H</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">fft</span><span class="o">.</span><span class="n">fft</span><span class="p">(</span><span class="n">h</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">/</span><span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="n">h</span><span class="p">[</span><span class="n">i</span><span class="p">]),</span><span class="n">ofdm</span><span class="o">+</span><span class="n">cp</span><span class="p">)</span>
</span><span class='line'>	<span class="n">datacanal</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">fft</span><span class="o">.</span><span class="n">fft</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'><span class="n">datacanal</span> <span class="o">=</span> <span class="n">datacanal</span><span class="o">*</span><span class="n">H</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataofdm</span><span class="p">)[</span><span class="mi">0</span><span class="p">]):</span>
</span><span class='line'>	<span class="n">datacanal</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">fft</span><span class="o">.</span><span class="n">ifft</span><span class="p">(</span><span class="n">datacanal</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'><span class="c">#AWGN</span>
</span><span class='line'><span class="c">#print &quot;Sumando AWGN a los datos&quot;</span>
</span><span class='line'><span class="n">snr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">repeat</span><span class="p">(</span><span class="mi">10</span><span class="o">**</span><span class="p">(</span><span class="n">ebno</span><span class="o">/</span><span class="mf">10.</span><span class="p">),</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datacanal</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datacanal</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">ebno</span><span class="p">)[</span><span class="mi">0</span><span class="p">]),(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datacanal</span><span class="p">)[</span><span class="mi">1</span><span class="p">])))</span>
</span><span class='line'><span class="n">awgn</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datacanal</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datacanal</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datacanal</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datacanal</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="mi">1j</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="n">snr</span><span class="p">)</span>
</span><span class='line'><span class="n">datacanal</span> <span class="o">=</span> <span class="n">datacanal</span> <span class="o">+</span> <span class="n">awgn</span>
</span><span class='line'>
</span><span class='line'><span class="c">### RECEPTOR ###</span>
</span><span class='line'><span class="c">#print &quot;En el receptor OFDM&quot;</span>
</span><span class='line'><span class="c">#Remueve el prefijo ciclico</span>
</span><span class='line'><span class="n">dataiofdm</span> <span class="o">=</span> <span class="n">datacanal</span><span class="p">[:,</span><span class="n">cp</span><span class="p">:</span><span class="n">ofdm</span><span class="o">+</span><span class="n">cp</span><span class="p">]</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#FFT</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">)[</span><span class="mi">0</span><span class="p">]):</span>
</span><span class='line'>	<span class="n">dataiofdm</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">)[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">fft</span><span class="o">.</span><span class="n">fft</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">)[</span><span class="mi">1</span><span class="p">]])</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Ecualizador</span>
</span><span class='line'><span class="c">#print &quot;Ecualizando los datos recibidos&quot;</span>
</span><span class='line'><span class="n">dataiofdm</span> <span class="o">=</span> <span class="n">dataiofdm</span><span class="o">/</span><span class="n">H</span><span class="p">[:,</span><span class="n">cp</span><span class="p">:</span><span class="n">ofdm</span><span class="o">+</span><span class="n">cp</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Calculo de SNR estimado</span>
</span><span class='line'>
</span><span class='line'><span class="n">snrest</span> <span class="o">=</span> <span class="mi">10</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">square</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">absolute</span><span class="p">(</span><span class="n">dataiofdm</span><span class="o">.</span><span class="n">reshape</span><span class="p">((</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">paqsnr</span><span class="p">,</span><span class="n">ofdm</span><span class="p">)))),</span><span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="p">),</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span>
</span><span class='line'><span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">square</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">absolute</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">[:][:,</span><span class="n">zero_carriers</span><span class="p">]</span><span class="o">.</span><span class="n">reshape</span><span class="p">((</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">paqsnr</span><span class="p">,</span><span class="n">ofdm</span><span class="o">-</span><span class="n">dfts</span><span class="o">-</span><span class="n">pilot</span><span class="p">)))),</span><span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="p">),</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="p">((</span>
</span><span class='line'><span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="n">ofdm</span><span class="o">-</span><span class="n">dfts</span><span class="o">-</span><span class="n">pilot</span><span class="p">)</span><span class="o">/</span><span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="n">ofdm</span><span class="p">)))</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">dataiofdm</span> <span class="o">=</span> <span class="n">dataiofdm</span><span class="p">[:,</span><span class="n">dfts_carriers</span><span class="p">]</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#IDFTS</span>
</span><span class='line'><span class="c">#print &quot;Calculando IDFTS&quot;</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">)[</span><span class="mi">0</span><span class="p">]):</span>
</span><span class='line'>	<span class="n">dataiofdm</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">)[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">fft</span><span class="o">.</span><span class="n">ifft</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">)[</span><span class="mi">1</span><span class="p">]])</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Demodulador 16-QAM</span>
</span><span class='line'><span class="c">#print &quot;Demodulador digital&quot;</span>
</span><span class='line'><span class="n">datadem</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">dataiofdm</span><span class="p">,(</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">/</span><span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="n">datadem</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">transpose</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">vstack</span><span class="p">((</span><span class="n">np</span><span class="o">.</span><span class="n">real</span><span class="p">(</span><span class="n">datadem</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="n">np</span><span class="o">.</span><span class="n">imag</span><span class="p">(</span><span class="n">datadem</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="n">np</span><span class="o">.</span><span class="n">absolute</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">real</span><span class="p">(</span><span class="n">datadem</span><span class="p">))</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">,</span><span class="n">np</span><span class="o">.</span><span class="n">absolute</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">imag</span><span class="p">(</span><span class="n">datadem</span><span class="p">))</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">))</span><span class="o">*</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Recepcion para calculo de CRC</span>
</span><span class='line'><span class="c">#print &quot;Calculo de CRC Check&quot;</span>
</span><span class='line'><span class="n">datarcrc</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">datadem</span><span class="p">,(</span><span class="n">paq</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'><span class="n">datarx</span> <span class="o">=</span> <span class="n">datarcrc</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Calculo de CRC</span>
</span><span class='line'><span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datarcrc</span><span class="p">)[</span><span class="mi">0</span><span class="p">]):</span>
</span><span class='line'>	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datarcrc</span><span class="p">)[</span><span class="mi">1</span><span class="p">]):</span>
</span><span class='line'>		<span class="k">if</span> <span class="n">datarcrc</span><span class="p">[</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span> <span class="ow">and</span> <span class="n">i</span><span class="o">+</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">pol</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span> <span class="o">&lt;</span> <span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">datarcrc</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span>
</span><span class='line'>			<span class="n">datarcrc</span><span class="p">[</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">pol</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">datarcrc</span><span class="p">[</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">:</span><span class="n">sp</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">pol</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">i</span><span class="p">]</span><span class="o">^</span><span class="n">pol</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Eliminacion del CRC y paquetes incorrectos</span>
</span><span class='line'><span class="n">datar</span> <span class="o">=</span> <span class="n">datarx</span><span class="p">[:,</span><span class="mi">0</span><span class="p">:</span><span class="n">datasize</span><span class="o">-</span><span class="n">polsize</span><span class="p">]</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Contador de paquetes correctos de acuerdo al CRC</span>
</span><span class='line'><span class="c">#print &quot;Calculando PER&quot;</span>
</span><span class='line'><span class="n">per</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(((</span><span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">datarcrc</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">!=</span><span class="mi">0</span><span class="p">)</span><span class="o">*</span><span class="mi">1</span><span class="p">),(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">paqsnr</span><span class="p">)),</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">paqsnr</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Comparacion entre datab y datar y promedia errores de acuerdo a iteraciones</span>
</span><span class='line'><span class="c">#print &quot;Calculando BER&quot;</span>
</span><span class='line'><span class="n">ber</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">((</span><span class="n">np</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">absolute</span><span class="p">(</span><span class="n">datar</span><span class="o">-</span><span class="n">datab</span><span class="p">),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">paqsnr</span><span class="p">))),</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">paqsnr</span><span class="o">*</span><span class="p">(</span><span class="n">datasize</span><span class="o">-</span><span class="n">polsize</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;SNR %BER %PER SNRest&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="n">np</span><span class="o">.</span><span class="n">vstack</span><span class="p">([</span><span class="n">ebno</span><span class="p">,</span><span class="n">ber</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="n">per</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="n">snrest</span><span class="p">])</span><span class="o">.</span><span class="n">T</span>
</span><span class='line'>
</span><span class='line'><span class="n">leg1</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;BER&quot;</span><span class="p">,</span> <span class="s">&quot;PER&quot;</span><span class="p">]</span>
</span><span class='line'><span class="n">leg2</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;SNR est&quot;</span><span class="p">,</span> <span class="s">&quot;SNR real&quot;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">fig</span><span class="p">,</span> <span class="n">ax1</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">()</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">&#39;Bit Error Rate For A DFTS-OFDM System&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ax1</span><span class="o">.</span><span class="n">set_color_cycle</span><span class="p">([</span><span class="s">&#39;r&#39;</span><span class="p">,</span> <span class="s">&#39;m&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">ax1</span><span class="o">.</span><span class="n">semilogy</span><span class="p">(</span><span class="n">ebno</span><span class="p">,</span><span class="n">ber</span><span class="p">,</span><span class="s">&#39;-*&#39;</span><span class="p">,</span><span class="n">ebno</span><span class="p">,</span><span class="n">per</span><span class="p">,</span><span class="s">&#39;-+&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ax1</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">&#39;SNR&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ax1</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">leg1</span><span class="p">,</span> <span class="n">loc</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="n">ax2</span> <span class="o">=</span> <span class="n">ax1</span><span class="o">.</span><span class="n">twinx</span><span class="p">()</span>
</span><span class='line'><span class="n">ax2</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">ebno</span><span class="p">,</span><span class="n">snrest</span><span class="p">,</span><span class="s">&#39;v&#39;</span><span class="p">,</span><span class="n">ebno</span><span class="p">,</span><span class="n">ebno</span><span class="p">,</span><span class="s">&#39;--&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ax2</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">leg2</span><span class="p">,</span> <span class="n">loc</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img src="/downloads/images/dftsofdmsnr.png"></p>

<p>Referencias</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>LI, Yunxin. Blind SNR estimation of OFDM signals. En 2010 International Conference on Microwave and Millimeter Wave Technology. 2010. p. 1792-1796.<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
